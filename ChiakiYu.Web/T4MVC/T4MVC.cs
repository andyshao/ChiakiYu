// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    static readonly AdminClass s_Admin = new AdminClass();
    public static AdminClass Admin { get { return s_Admin; } }
    public static ChiakiYu.Web.Controllers.AccountController Account = new ChiakiYu.Web.Controllers.T4MVC_AccountController();
    public static ChiakiYu.Web.Controllers.BlogController Blog = new ChiakiYu.Web.Controllers.T4MVC_BlogController();
    public static ChiakiYu.Web.Controllers.ChannelController Channel = new ChiakiYu.Web.Controllers.T4MVC_ChannelController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class AdminClass
    {
        public readonly string Name = "Admin";
        public ChiakiYu.Web.Areas.Admin.Controllers.AdminController Admin = new ChiakiYu.Web.Areas.Admin.Controllers.T4MVC_AdminController();
        public ChiakiYu.Web.Areas.Admin.Controllers.AdminSettingController AdminSetting = new ChiakiYu.Web.Areas.Admin.Controllers.T4MVC_AdminSettingController();
        public ChiakiYu.Web.Areas.Admin.Controllers.AdminUserController AdminUser = new ChiakiYu.Web.Areas.Admin.Controllers.T4MVC_AdminUserController();
        public T4MVC.Admin.SharedController Shared = new T4MVC.Admin.SharedController();
    }
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ContentResult : System.Web.Mvc.ContentResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ContentResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_JsonResult : System.Web.Mvc.JsonResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_JsonResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class artDialog {
            private const string URLPATH = "~/Scripts/artDialog";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                private const string URLPATH = "~/Scripts/artDialog/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string ui_dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui-dialog.min.css") ? Url("ui-dialog.min.css") : Url("ui-dialog.css");
                     
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class js {
                private const string URLPATH = "~/Scripts/artDialog/js";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string dialog_min_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog-min.min.js") ? Url("dialog-min.min.js") : Url("dialog-min.js");
                public static readonly string dialog_plus_min_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog-plus-min.min.js") ? Url("dialog-plus-min.min.js") : Url("dialog-plus-min.js");
                public static readonly string dialog_plus_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog-plus.min.js") ? Url("dialog-plus.min.js") : Url("dialog-plus.js");
                public static readonly string dialog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.js") ? Url("dialog.min.js") : Url("dialog.js");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class bootstrap {
            private const string URLPATH = "~/Scripts/bootstrap";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
            public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        }
    
        public static readonly string html5shiv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/html5shiv.min.js") ? Url("html5shiv.min.js") : Url("html5shiv.js");
        public static readonly string jquery_2_1_4_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.1.4.intellisense.min.js") ? Url("jquery-2.1.4.intellisense.min.js") : Url("jquery-2.1.4.intellisense.js");
        public static readonly string jquery_2_1_4_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.1.4.min.js") ? Url("jquery-2.1.4.min.js") : Url("jquery-2.1.4.js");
        public static readonly string jquery_2_1_4_min_js = Url("jquery-2.1.4.min.js");
        public static readonly string jquery_2_1_4_min_map = Url("jquery-2.1.4.min.map");
        public static readonly string jquery_blockUI_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.blockUI.min.js") ? Url("jquery.blockUI.min.js") : Url("jquery.blockUI.js");
        public static readonly string jquery_signalR_2_2_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.signalR-2.2.0.min.js") ? Url("jquery.signalR-2.2.0.min.js") : Url("jquery.signalR-2.2.0.js");
        public static readonly string jquery_signalR_2_2_0_min_js = Url("jquery.signalR-2.2.0.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class jquery_validate {
            private const string URLPATH = "~/Scripts/jquery.validate";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
            public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
            public static readonly string jquery_validate_message_zh_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.message_zh.min.js") ? Url("jquery.validate.message_zh.min.js") : Url("jquery.validate.message_zh.js");
            public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
            public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
            public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        }
    
        public static readonly string json2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/json2.min.js") ? Url("json2.min.js") : Url("json2.js");
        public static readonly string json2_min_js = Url("json2.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class lightbox {
            private const string URLPATH = "~/Scripts/lightbox";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                private const string URLPATH = "~/Scripts/lightbox/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string lightbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lightbox.min.css") ? Url("lightbox.min.css") : Url("lightbox.css");
                     
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class images {
                private const string URLPATH = "~/Scripts/lightbox/images";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string close_png = Url("close.png");
                public static readonly string loading_gif = Url("loading.gif");
                public static readonly string next_png = Url("next.png");
                public static readonly string prev_png = Url("prev.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class js {
                private const string URLPATH = "~/Scripts/lightbox/js";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string lightbox_plus_jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lightbox-plus-jquery.min.js") ? Url("lightbox-plus-jquery.min.js") : Url("lightbox-plus-jquery.js");
                public static readonly string lightbox_plus_jquery_min_js = Url("lightbox-plus-jquery.min.js");
                public static readonly string lightbox_plus_jquery_min_map = Url("lightbox-plus-jquery.min.map");
                public static readonly string lightbox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lightbox.min.js") ? Url("lightbox.min.js") : Url("lightbox.js");
                public static readonly string lightbox_min_js = Url("lightbox.min.js");
                public static readonly string lightbox_min_map = Url("lightbox.min.map");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class luckyyu {
            private const string URLPATH = "~/Scripts/luckyyu";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string app_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/app.min.js") ? Url("app.min.js") : Url("app.js");
            public static readonly string app_min_js = Url("app.min.js");
            public static readonly string demo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/demo.min.js") ? Url("demo.min.js") : Url("demo.js");
            public static readonly string lucky_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lucky.plugin.min.js") ? Url("lucky.plugin.min.js") : Url("lucky.plugin.js");
            public static readonly string main_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/main.min.js") ? Url("main.min.js") : Url("main.js");
        }
    
        public static readonly string modernizr_2_8_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.8.3.min.js") ? Url("modernizr-2.8.3.min.js") : Url("modernizr-2.8.3.js");
        public static readonly string moment_with_locales_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/moment-with-locales.min.js") ? Url("moment-with-locales.min.js") : Url("moment-with-locales.js");
        public static readonly string moment_with_locales_min_js = Url("moment-with-locales.min.js");
        public static readonly string moment_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/moment.min.js") ? Url("moment.min.js") : Url("moment.js");
        public static readonly string moment_min_js = Url("moment.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class plupload {
            private const string URLPATH = "~/Scripts/plupload";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string plupload_full_min_js = Url("plupload.full.min.js");
            public static readonly string zh_CN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh_CN.min.js") ? Url("zh_CN.min.js") : Url("zh_CN.js");
        }
    
        public static readonly string respond_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/respond.min.js") ? Url("respond.min.js") : Url("respond.js");
        public static readonly string respond_matchmedia_addListener_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/respond.matchmedia.addListener.min.js") ? Url("respond.matchmedia.addListener.min.js") : Url("respond.matchmedia.addListener.js");
        public static readonly string respond_matchmedia_addListener_min_js = Url("respond.matchmedia.addListener.min.js");
        public static readonly string respond_min_js = Url("respond.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class slimScroll {
            private const string URLPATH = "~/Scripts/slimScroll";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string jquery_slimscroll_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.slimscroll.min.js") ? Url("jquery.slimscroll.min.js") : Url("jquery.slimscroll.js");
            public static readonly string jquery_slimscroll_min_js = Url("jquery.slimscroll.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class supersized {
            private const string URLPATH = "~/Scripts/supersized";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                private const string URLPATH = "~/Scripts/supersized/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string supersized_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/supersized.min.css") ? Url("supersized.min.css") : Url("supersized.css");
                     
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class js {
                private const string URLPATH = "~/Scripts/supersized/js";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_easing_min_js = Url("jquery.easing.min.js");
                public static readonly string supersized_3_2_7_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/supersized.3.2.7.min.js") ? Url("supersized.3.2.7.min.js") : Url("supersized.3.2.7.js");
                public static readonly string supersized_3_2_7_min_js = Url("supersized.3.2.7.min.js");
                public static readonly string supersized_init_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/supersized.init.min.js") ? Url("supersized.init.min.js") : Url("supersized.init.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class theme {
                private const string URLPATH = "~/Scripts/supersized/theme";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string supersized_shutter_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/supersized.shutter.min.css") ? Url("supersized.shutter.min.css") : Url("supersized.shutter.css");
                     
                public static readonly string supersized_shutter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/supersized.shutter.min.js") ? Url("supersized.shutter.min.js") : Url("supersized.shutter.js");
                public static readonly string supersized_shutter_min_js = Url("supersized.shutter.min.js");
            }
        
        }
    
        public static readonly string toastr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/toastr.min.js") ? Url("toastr.min.js") : Url("toastr.js");
        public static readonly string toastr_min_js = Url("toastr.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class wow {
            private const string URLPATH = "~/Scripts/wow";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string wow_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wow.min.js") ? Url("wow.min.js") : Url("wow.js");
            public static readonly string wow_min_js = Url("wow.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class zTree {
            private const string URLPATH = "~/Scripts/zTree";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                private const string URLPATH = "~/Scripts/zTree/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class awesomeStyle {
                    private const string URLPATH = "~/Scripts/zTree/css/awesomeStyle";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string awesome_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/awesome.min.css") ? Url("awesome.min.css") : Url("awesome.css");
                         
                    public static readonly string awesome_less = Url("awesome.less");
                    public static readonly string fa_less = Url("fa.less");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class img {
                        private const string URLPATH = "~/Scripts/zTree/css/awesomeStyle/img";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string loading_gif = Url("loading.gif");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class metroStyle {
                    private const string URLPATH = "~/Scripts/zTree/css/metroStyle";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class img {
                        private const string URLPATH = "~/Scripts/zTree/css/metroStyle/img";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string line_conn_png = Url("line_conn.png");
                        public static readonly string loading_gif = Url("loading.gif");
                        public static readonly string metro_gif = Url("metro.gif");
                        public static readonly string metro_png = Url("metro.png");
                    }
                
                    public static readonly string metroStyle_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metroStyle.min.css") ? Url("metroStyle.min.css") : Url("metroStyle.css");
                         
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class zTreeStyle {
                    private const string URLPATH = "~/Scripts/zTree/css/zTreeStyle";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class img {
                        private const string URLPATH = "~/Scripts/zTree/css/zTreeStyle/img";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class diy {
                            private const string URLPATH = "~/Scripts/zTree/css/zTreeStyle/img/diy";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string _1_close_png = Url("1_close.png");
                            public static readonly string _1_open_png = Url("1_open.png");
                            public static readonly string _2_png = Url("2.png");
                            public static readonly string _3_png = Url("3.png");
                            public static readonly string _4_png = Url("4.png");
                            public static readonly string _5_png = Url("5.png");
                            public static readonly string _6_png = Url("6.png");
                            public static readonly string _7_png = Url("7.png");
                            public static readonly string _8_png = Url("8.png");
                            public static readonly string _9_png = Url("9.png");
                        }
                    
                        public static readonly string line_conn_gif = Url("line_conn.gif");
                        public static readonly string loading_gif = Url("loading.gif");
                        public static readonly string zTreeStandard_gif = Url("zTreeStandard.gif");
                        public static readonly string zTreeStandard_png = Url("zTreeStandard.png");
                    }
                
                    public static readonly string zTreeStyle_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zTreeStyle.min.css") ? Url("zTreeStyle.min.css") : Url("zTreeStyle.css");
                         
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class js {
                private const string URLPATH = "~/Scripts/zTree/js";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_1_4_4_min_js = Url("jquery-1.4.4.min.js");
                public static readonly string jquery_ztree_all_3_5_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ztree.all-3.5.min.js") ? Url("jquery.ztree.all-3.5.min.js") : Url("jquery.ztree.all-3.5.js");
                public static readonly string jquery_ztree_all_3_5_min_js = Url("jquery.ztree.all-3.5.min.js");
                public static readonly string jquery_ztree_core_3_5_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ztree.core-3.5.min.js") ? Url("jquery.ztree.core-3.5.min.js") : Url("jquery.ztree.core-3.5.js");
                public static readonly string jquery_ztree_core_3_5_min_js = Url("jquery.ztree.core-3.5.min.js");
                public static readonly string jquery_ztree_excheck_3_5_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ztree.excheck-3.5.min.js") ? Url("jquery.ztree.excheck-3.5.min.js") : Url("jquery.ztree.excheck-3.5.js");
                public static readonly string jquery_ztree_excheck_3_5_min_js = Url("jquery.ztree.excheck-3.5.min.js");
                public static readonly string jquery_ztree_exedit_3_5_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ztree.exedit-3.5.min.js") ? Url("jquery.ztree.exedit-3.5.min.js") : Url("jquery.ztree.exedit-3.5.js");
                public static readonly string jquery_ztree_exedit_3_5_min_js = Url("jquery.ztree.exedit-3.5.min.js");
                public static readonly string jquery_ztree_exedit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ztree.exedit.min.js") ? Url("jquery.ztree.exedit.min.js") : Url("jquery.ztree.exedit.js");
                public static readonly string jquery_ztree_exhide_3_5_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ztree.exhide-3.5.min.js") ? Url("jquery.ztree.exhide-3.5.min.js") : Url("jquery.ztree.exhide-3.5.js");
                public static readonly string jquery_ztree_exhide_3_5_min_js = Url("jquery.ztree.exhide-3.5.min.js");
            }
        
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string AdminLTE_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AdminLTE.min.css") ? Url("AdminLTE.min.css") : Url("AdminLTE.css");
             
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class animate {
            private const string URLPATH = "~/Content/animate";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string animate_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/animate.min.css") ? Url("animate.min.css") : Url("animate.css");
                 
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class bootstrap {
            private const string URLPATH = "~/Content/bootstrap";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string bootstrap_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-theme.min.css") ? Url("bootstrap-theme.min.css") : Url("bootstrap-theme.css");
                 
            public static readonly string bootstrap_theme_min_css = Url("bootstrap-theme.min.css");
            public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                 
            public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class flags {
            private const string URLPATH = "~/Content/flags";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string famfamfam_flags_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/famfamfam-flags.min.css") ? Url("famfamfam-flags.min.css") : Url("famfamfam-flags.css");
                 
            public static readonly string famfamfam_flags_png = Url("famfamfam-flags.png");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class font_awesome {
            private const string URLPATH = "~/Content/font-awesome";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                private const string URLPATH = "~/Content/font-awesome/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string font_awesome_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/font-awesome.min.css") ? Url("font-awesome.min.css") : Url("font-awesome.css");
                     
                public static readonly string font_awesome_css_map = Url("font-awesome.css.map");
                public static readonly string font_awesome_min_css = Url("font-awesome.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class fonts {
                private const string URLPATH = "~/Content/font-awesome/fonts";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string fontawesome_webfont_eot = Url("fontawesome-webfont.eot");
                public static readonly string fontawesome_webfont_svg = Url("fontawesome-webfont.svg");
                public static readonly string fontawesome_webfont_ttf = Url("fontawesome-webfont.ttf");
                public static readonly string fontawesome_webfont_woff = Url("fontawesome-webfont.woff");
                public static readonly string fontawesome_webfont_woff2 = Url("fontawesome-webfont.woff2");
                public static readonly string FontAwesome_otf = Url("FontAwesome.otf");
            }
        
        }
    
        public static readonly string main_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/main.min.css") ? Url("main.min.css") : Url("main.css");
             
        public static readonly string prettyPhoto_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/prettyPhoto.min.css") ? Url("prettyPhoto.min.css") : Url("prettyPhoto.css");
             
        public static readonly string responsive_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/responsive.min.css") ? Url("responsive.min.css") : Url("responsive.css");
             
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class skins {
            private const string URLPATH = "~/Content/skins";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string _all_skins_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_all-skins.min.css") ? Url("_all-skins.min.css") : Url("_all-skins.css");
                 
            public static readonly string _all_skins_min_css = Url("_all-skins.min.css");
            public static readonly string skin_black_light_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skin-black-light.min.css") ? Url("skin-black-light.min.css") : Url("skin-black-light.css");
                 
            public static readonly string skin_black_light_min_css = Url("skin-black-light.min.css");
            public static readonly string skin_black_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skin-black.min.css") ? Url("skin-black.min.css") : Url("skin-black.css");
                 
            public static readonly string skin_black_min_css = Url("skin-black.min.css");
            public static readonly string skin_blue_light_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skin-blue-light.min.css") ? Url("skin-blue-light.min.css") : Url("skin-blue-light.css");
                 
            public static readonly string skin_blue_light_min_css = Url("skin-blue-light.min.css");
            public static readonly string skin_blue_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skin-blue.min.css") ? Url("skin-blue.min.css") : Url("skin-blue.css");
                 
            public static readonly string skin_blue_min_css = Url("skin-blue.min.css");
            public static readonly string skin_green_light_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skin-green-light.min.css") ? Url("skin-green-light.min.css") : Url("skin-green-light.css");
                 
            public static readonly string skin_green_light_min_css = Url("skin-green-light.min.css");
            public static readonly string skin_green_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skin-green.min.css") ? Url("skin-green.min.css") : Url("skin-green.css");
                 
            public static readonly string skin_green_min_css = Url("skin-green.min.css");
            public static readonly string skin_purple_light_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skin-purple-light.min.css") ? Url("skin-purple-light.min.css") : Url("skin-purple-light.css");
                 
            public static readonly string skin_purple_light_min_css = Url("skin-purple-light.min.css");
            public static readonly string skin_purple_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skin-purple.min.css") ? Url("skin-purple.min.css") : Url("skin-purple.css");
                 
            public static readonly string skin_purple_min_css = Url("skin-purple.min.css");
            public static readonly string skin_red_light_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skin-red-light.min.css") ? Url("skin-red-light.min.css") : Url("skin-red-light.css");
                 
            public static readonly string skin_red_light_min_css = Url("skin-red-light.min.css");
            public static readonly string skin_red_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skin-red.min.css") ? Url("skin-red.min.css") : Url("skin-red.css");
                 
            public static readonly string skin_red_min_css = Url("skin-red.min.css");
            public static readonly string skin_yellow_light_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skin-yellow-light.min.css") ? Url("skin-yellow-light.min.css") : Url("skin-yellow-light.css");
                 
            public static readonly string skin_yellow_light_min_css = Url("skin-yellow-light.min.css");
            public static readonly string skin_yellow_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skin-yellow.min.css") ? Url("skin-yellow.min.css") : Url("skin-yellow.css");
                 
            public static readonly string skin_yellow_min_css = Url("skin-yellow.min.css");
        }
    
        public static readonly string toastr_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/toastr.min.css") ? Url("toastr.min.css") : Url("toastr.css");
             
        public static readonly string toastr_min_css = Url("toastr.min.css");
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class artDialog 
            {
                public static partial class css 
                {
                    public static class Assets
                    {
                        public const string ui_dialog_css = "~/Scripts/artDialog/css/ui-dialog.css";
                    }
                }
                public static partial class js 
                {
                    public static class Assets
                    {
                        public const string dialog_min_js = "~/Scripts/artDialog/js/dialog-min.js"; 
                        public const string dialog_plus_min_js = "~/Scripts/artDialog/js/dialog-plus-min.js"; 
                        public const string dialog_plus_js = "~/Scripts/artDialog/js/dialog-plus.js"; 
                        public const string dialog_js = "~/Scripts/artDialog/js/dialog.js"; 
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class bootstrap 
            {
                public static class Assets
                {
                    public const string bootstrap_js = "~/Scripts/bootstrap/bootstrap.js"; 
                    public const string bootstrap_min_js = "~/Scripts/bootstrap/bootstrap.min.js"; 
                }
            }
            public static partial class jquery_validate 
            {
                public static class Assets
                {
                    public const string jquery_validate_js = "~/Scripts/jquery.validate/jquery.validate.js"; 
                    public const string jquery_validate_message_zh_js = "~/Scripts/jquery.validate/jquery.validate.message_zh.js"; 
                    public const string jquery_validate_min_js = "~/Scripts/jquery.validate/jquery.validate.min.js"; 
                    public const string jquery_validate_unobtrusive_js = "~/Scripts/jquery.validate/jquery.validate.unobtrusive.js"; 
                    public const string jquery_validate_unobtrusive_min_js = "~/Scripts/jquery.validate/jquery.validate.unobtrusive.min.js"; 
                }
            }
            public static partial class lightbox 
            {
                public static partial class css 
                {
                    public static class Assets
                    {
                        public const string lightbox_css = "~/Scripts/lightbox/css/lightbox.css";
                    }
                }
                public static partial class images 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class js 
                {
                    public static class Assets
                    {
                        public const string lightbox_plus_jquery_js = "~/Scripts/lightbox/js/lightbox-plus-jquery.js"; 
                        public const string lightbox_plus_jquery_min_js = "~/Scripts/lightbox/js/lightbox-plus-jquery.min.js"; 
                        public const string lightbox_js = "~/Scripts/lightbox/js/lightbox.js"; 
                        public const string lightbox_min_js = "~/Scripts/lightbox/js/lightbox.min.js"; 
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class luckyyu 
            {
                public static class Assets
                {
                    public const string app_js = "~/Scripts/luckyyu/app.js"; 
                    public const string app_min_js = "~/Scripts/luckyyu/app.min.js"; 
                    public const string demo_js = "~/Scripts/luckyyu/demo.js"; 
                    public const string lucky_plugin_js = "~/Scripts/luckyyu/lucky.plugin.js"; 
                    public const string main_js = "~/Scripts/luckyyu/main.js"; 
                }
            }
            public static partial class plupload 
            {
                public static class Assets
                {
                    public const string plupload_full_min_js = "~/Scripts/plupload/plupload.full.min.js"; 
                    public const string zh_CN_js = "~/Scripts/plupload/zh_CN.js"; 
                }
            }
            public static partial class slimScroll 
            {
                public static class Assets
                {
                    public const string jquery_slimscroll_js = "~/Scripts/slimScroll/jquery.slimscroll.js"; 
                    public const string jquery_slimscroll_min_js = "~/Scripts/slimScroll/jquery.slimscroll.min.js"; 
                }
            }
            public static partial class supersized 
            {
                public static partial class css 
                {
                    public static class Assets
                    {
                        public const string supersized_css = "~/Scripts/supersized/css/supersized.css";
                    }
                }
                public static partial class js 
                {
                    public static class Assets
                    {
                        public const string jquery_easing_min_js = "~/Scripts/supersized/js/jquery.easing.min.js"; 
                        public const string supersized_3_2_7_js = "~/Scripts/supersized/js/supersized.3.2.7.js"; 
                        public const string supersized_3_2_7_min_js = "~/Scripts/supersized/js/supersized.3.2.7.min.js"; 
                        public const string supersized_init_js = "~/Scripts/supersized/js/supersized.init.js"; 
                    }
                }
                public static partial class theme 
                {
                    public static class Assets
                    {
                        public const string supersized_shutter_css = "~/Scripts/supersized/theme/supersized.shutter.css";
                        public const string supersized_shutter_js = "~/Scripts/supersized/theme/supersized.shutter.js"; 
                        public const string supersized_shutter_min_js = "~/Scripts/supersized/theme/supersized.shutter.min.js"; 
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class wow 
            {
                public static class Assets
                {
                    public const string wow_js = "~/Scripts/wow/wow.js"; 
                    public const string wow_min_js = "~/Scripts/wow/wow.min.js"; 
                }
            }
            public static partial class zTree 
            {
                public static partial class css 
                {
                    public static partial class awesomeStyle 
                    {
                        public static partial class img 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string awesome_css = "~/Scripts/zTree/css/awesomeStyle/awesome.css";
                        }
                    }
                    public static partial class metroStyle 
                    {
                        public static partial class img 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string metroStyle_css = "~/Scripts/zTree/css/metroStyle/metroStyle.css";
                        }
                    }
                    public static partial class zTreeStyle 
                    {
                        public static partial class img 
                        {
                            public static partial class diy 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string zTreeStyle_css = "~/Scripts/zTree/css/zTreeStyle/zTreeStyle.css";
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class js 
                {
                    public static class Assets
                    {
                        public const string jquery_1_4_4_min_js = "~/Scripts/zTree/js/jquery-1.4.4.min.js"; 
                        public const string jquery_ztree_all_3_5_js = "~/Scripts/zTree/js/jquery.ztree.all-3.5.js"; 
                        public const string jquery_ztree_all_3_5_min_js = "~/Scripts/zTree/js/jquery.ztree.all-3.5.min.js"; 
                        public const string jquery_ztree_core_3_5_js = "~/Scripts/zTree/js/jquery.ztree.core-3.5.js"; 
                        public const string jquery_ztree_core_3_5_min_js = "~/Scripts/zTree/js/jquery.ztree.core-3.5.min.js"; 
                        public const string jquery_ztree_excheck_3_5_js = "~/Scripts/zTree/js/jquery.ztree.excheck-3.5.js"; 
                        public const string jquery_ztree_excheck_3_5_min_js = "~/Scripts/zTree/js/jquery.ztree.excheck-3.5.min.js"; 
                        public const string jquery_ztree_exedit_3_5_js = "~/Scripts/zTree/js/jquery.ztree.exedit-3.5.js"; 
                        public const string jquery_ztree_exedit_3_5_min_js = "~/Scripts/zTree/js/jquery.ztree.exedit-3.5.min.js"; 
                        public const string jquery_ztree_exedit_js = "~/Scripts/zTree/js/jquery.ztree.exedit.js"; 
                        public const string jquery_ztree_exhide_3_5_js = "~/Scripts/zTree/js/jquery.ztree.exhide-3.5.js"; 
                        public const string jquery_ztree_exhide_3_5_min_js = "~/Scripts/zTree/js/jquery.ztree.exhide-3.5.min.js"; 
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
                public const string _references_js = "~/Scripts/_references.js"; 
                public const string html5shiv_js = "~/Scripts/html5shiv.js"; 
                public const string jquery_2_1_4_intellisense_js = "~/Scripts/jquery-2.1.4.intellisense.js"; 
                public const string jquery_2_1_4_js = "~/Scripts/jquery-2.1.4.js"; 
                public const string jquery_2_1_4_min_js = "~/Scripts/jquery-2.1.4.min.js"; 
                public const string jquery_blockUI_js = "~/Scripts/jquery.blockUI.js"; 
                public const string jquery_signalR_2_2_0_js = "~/Scripts/jquery.signalR-2.2.0.js"; 
                public const string jquery_signalR_2_2_0_min_js = "~/Scripts/jquery.signalR-2.2.0.min.js"; 
                public const string json2_js = "~/Scripts/json2.js"; 
                public const string json2_min_js = "~/Scripts/json2.min.js"; 
                public const string modernizr_2_8_3_js = "~/Scripts/modernizr-2.8.3.js"; 
                public const string moment_with_locales_js = "~/Scripts/moment-with-locales.js"; 
                public const string moment_with_locales_min_js = "~/Scripts/moment-with-locales.min.js"; 
                public const string moment_js = "~/Scripts/moment.js"; 
                public const string moment_min_js = "~/Scripts/moment.min.js"; 
                public const string respond_js = "~/Scripts/respond.js"; 
                public const string respond_matchmedia_addListener_js = "~/Scripts/respond.matchmedia.addListener.js"; 
                public const string respond_matchmedia_addListener_min_js = "~/Scripts/respond.matchmedia.addListener.min.js"; 
                public const string respond_min_js = "~/Scripts/respond.min.js"; 
                public const string toastr_js = "~/Scripts/toastr.js"; 
                public const string toastr_min_js = "~/Scripts/toastr.min.js"; 
            }
        }
        public static partial class Content 
        {
            public static partial class animate 
            {
                public static class Assets
                {
                    public const string animate_css = "~/Content/animate/animate.css";
                }
            }
            public static partial class bootstrap 
            {
                public static class Assets
                {
                    public const string bootstrap_theme_css = "~/Content/bootstrap/bootstrap-theme.css";
                    public const string bootstrap_theme_min_css = "~/Content/bootstrap/bootstrap-theme.min.css";
                    public const string bootstrap_css = "~/Content/bootstrap/bootstrap.css";
                    public const string bootstrap_min_css = "~/Content/bootstrap/bootstrap.min.css";
                }
            }
            public static partial class flags 
            {
                public static class Assets
                {
                    public const string famfamfam_flags_css = "~/Content/flags/famfamfam-flags.css";
                }
            }
            public static partial class font_awesome 
            {
                public static partial class css 
                {
                    public static class Assets
                    {
                        public const string font_awesome_css = "~/Content/font-awesome/css/font-awesome.css";
                        public const string font_awesome_min_css = "~/Content/font-awesome/css/font-awesome.min.css";
                    }
                }
                public static partial class fonts 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class skins 
            {
                public static class Assets
                {
                    public const string _all_skins_css = "~/Content/skins/_all-skins.css";
                    public const string _all_skins_min_css = "~/Content/skins/_all-skins.min.css";
                    public const string skin_black_light_css = "~/Content/skins/skin-black-light.css";
                    public const string skin_black_light_min_css = "~/Content/skins/skin-black-light.min.css";
                    public const string skin_black_css = "~/Content/skins/skin-black.css";
                    public const string skin_black_min_css = "~/Content/skins/skin-black.min.css";
                    public const string skin_blue_light_css = "~/Content/skins/skin-blue-light.css";
                    public const string skin_blue_light_min_css = "~/Content/skins/skin-blue-light.min.css";
                    public const string skin_blue_css = "~/Content/skins/skin-blue.css";
                    public const string skin_blue_min_css = "~/Content/skins/skin-blue.min.css";
                    public const string skin_green_light_css = "~/Content/skins/skin-green-light.css";
                    public const string skin_green_light_min_css = "~/Content/skins/skin-green-light.min.css";
                    public const string skin_green_css = "~/Content/skins/skin-green.css";
                    public const string skin_green_min_css = "~/Content/skins/skin-green.min.css";
                    public const string skin_purple_light_css = "~/Content/skins/skin-purple-light.css";
                    public const string skin_purple_light_min_css = "~/Content/skins/skin-purple-light.min.css";
                    public const string skin_purple_css = "~/Content/skins/skin-purple.css";
                    public const string skin_purple_min_css = "~/Content/skins/skin-purple.min.css";
                    public const string skin_red_light_css = "~/Content/skins/skin-red-light.css";
                    public const string skin_red_light_min_css = "~/Content/skins/skin-red-light.min.css";
                    public const string skin_red_css = "~/Content/skins/skin-red.css";
                    public const string skin_red_min_css = "~/Content/skins/skin-red.min.css";
                    public const string skin_yellow_light_css = "~/Content/skins/skin-yellow-light.css";
                    public const string skin_yellow_light_min_css = "~/Content/skins/skin-yellow-light.min.css";
                    public const string skin_yellow_css = "~/Content/skins/skin-yellow.css";
                    public const string skin_yellow_min_css = "~/Content/skins/skin-yellow.min.css";
                }
            }
            public static class Assets
            {
                public const string AdminLTE_css = "~/Content/AdminLTE.css";
                public const string main_css = "~/Content/main.css";
                public const string prettyPhoto_css = "~/Content/prettyPhoto.css";
                public const string responsive_css = "~/Content/responsive.css";
                public const string toastr_css = "~/Content/toastr.css";
                public const string toastr_min_css = "~/Content/toastr.min.css";
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


